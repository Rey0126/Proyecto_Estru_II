package standardfilemanager;

import java.awt.Color;
import java.awt.Component;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author brhb2
 */
public class Main extends javax.swing.JFrame {

    ArrayList<Campo> campos = new ArrayList();
    String archivoActual = "";

    public Main() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setResizable(false);

        String[] titulos = {"Nombre", "Tipo", "Longitud", "Es Llave?"};
        DefaultTableModel m = new DefaultTableModel(new Object[][]{}, titulos);

        jTable1.setModel(m);
        jTable2.setModel(m);
        jTable3.setModel(m);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuArchivo = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        ArchivoEnUso2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnNuevoArchivo = new javax.swing.JButton();
        btnAbrirArchivo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        NuevoArchivo = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        nameArchivo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnCrearArchivo = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        MenuCampo = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        btnCrearCampo = new javax.swing.JButton();
        btnListarCampo = new javax.swing.JButton();
        btnModificarCampo = new javax.swing.JButton();
        btnEliminarCampo = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        CrearCampos = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameAtributo = new javax.swing.JTextField();
        tipoDato = new javax.swing.JComboBox<>();
        isKey = new javax.swing.JRadioButton();
        btnCrearCampos = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        longitud = new javax.swing.JSpinner();
        ListarCampos = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        ModificarCampos = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        bttnModificarCampos = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        BorrarCampo = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        btnBorrarCampo = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        MenuRegistro = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        btnCrearRegistro = new javax.swing.JButton();
        btnListarRegistros = new javax.swing.JButton();
        btnModificarRegistros = new javax.swing.JButton();
        btnBuscarRegistros = new javax.swing.JButton();
        btnEliminarRegistro = new javax.swing.JButton();
        btnCruzarArchivo = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        CrearRegistro = new javax.swing.JDialog();
        jPanel19 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        bttnCrearRegistro = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        ListarRegistro = new javax.swing.JDialog();
        jPanel21 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        ModificarRegistro = new javax.swing.JDialog();
        jPanel23 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        bttnModificarRegistro = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        BuscarRegistro = new javax.swing.JDialog();
        jPanel25 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        EliminarRegistro = new javax.swing.JDialog();
        jPanel27 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton25 = new javax.swing.JButton();
        bttnEliminarRegistro = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        CruzarArchivos = new javax.swing.JDialog();
        jPanel37 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        camposArchivoActual = new javax.swing.JComboBox<>();
        btnSeleccionarArchivo = new javax.swing.JButton();
        camposArchivo2 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        btnCruzarArchivos = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        MenuIndice = new javax.swing.JDialog();
        jPanel29 = new javax.swing.JPanel();
        ArchivoEnUso3 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        btnCrearIndices = new javax.swing.JButton();
        btnReIndexar = new javax.swing.JButton();
        btnBuscarReIndexados = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        CrearIndice = new javax.swing.JDialog();
        jPanel33 = new javax.swing.JPanel();
        bttnCrearIndices = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        LlaveSecundaria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        ArchivoEnUso4 = new javax.swing.JLabel();
        BuscarReIndexados = new javax.swing.JDialog();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jButton27 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jPanel32 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        MenuEstandarizacion = new javax.swing.JDialog();
        jPanel35 = new javax.swing.JPanel();
        btnExcel = new javax.swing.JButton();
        btnReIndexar1 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        ArchivoEnUso5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ArchivoEnUso = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        archivoAbierto = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ArchivoEnUso1 = new javax.swing.JLabel();

        MenuArchivo.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        MenuArchivo.setTitle("Menu Archivo");

        jPanel3.setBackground(new java.awt.Color(0, 153, 51));

        ArchivoEnUso2.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        ArchivoEnUso2.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso2.setText("Menu Archivo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso2)
                .addGap(100, 100, 100))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(ArchivoEnUso2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevoArchivo.setText("Nuevo Archivo");
        btnNuevoArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoArchivoMouseClicked(evt);
            }
        });

        btnAbrirArchivo.setText("Abrir Archivo");
        btnAbrirArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbrirArchivoMouseClicked(evt);
            }
        });

        btnSalvar.setText("Salvar Archivo");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });

        btnCerrar.setText("Cerrar Archivo");
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCerrarMouseClicked(evt);
            }
        });

        jButton11.setText("Regresar");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNuevoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnNuevoArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MenuArchivoLayout = new javax.swing.GroupLayout(MenuArchivo.getContentPane());
        MenuArchivo.getContentPane().setLayout(MenuArchivoLayout);
        MenuArchivoLayout.setHorizontalGroup(
            MenuArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuArchivoLayout.setVerticalGroup(
            MenuArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuArchivoLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NuevoArchivo.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        NuevoArchivo.setTitle("Nuevo Archivo");

        jPanel5.setBackground(new java.awt.Color(0, 153, 51));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Archivo");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(166, 166, 166))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ingrese el nombre del archivo");

        btnCrearArchivo.setText("Crear");
        btnCrearArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearArchivoMouseClicked(evt);
            }
        });

        jButton12.setText("Regresar");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(14, 14, 14)))
                .addGap(101, 101, 101))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(btnCrearArchivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(83, 83, 83))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(nameArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearArchivo)
                    .addComponent(jButton12))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout NuevoArchivoLayout = new javax.swing.GroupLayout(NuevoArchivo.getContentPane());
        NuevoArchivo.getContentPane().setLayout(NuevoArchivoLayout);
        NuevoArchivoLayout.setHorizontalGroup(
            NuevoArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        NuevoArchivoLayout.setVerticalGroup(
            NuevoArchivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NuevoArchivoLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuCampo.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        MenuCampo.setTitle("Menu Campo");

        jPanel9.setBackground(new java.awt.Color(0, 153, 51));

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Menu Campo");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(120, 120, 120))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(25, 25, 25))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        btnCrearCampo.setText("Crear Campos");
        btnCrearCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearCampoMouseClicked(evt);
            }
        });

        btnListarCampo.setText("Listar Campos");
        btnListarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarCampoActionPerformed(evt);
            }
        });

        btnModificarCampo.setText("Modificar Campos");
        btnModificarCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarCampoMouseClicked(evt);
            }
        });

        btnEliminarCampo.setText("Eliminar Campos");
        btnEliminarCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarCampoMouseClicked(evt);
            }
        });

        jButton10.setText("Regresar");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnCrearCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnListarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnModificarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MenuCampoLayout = new javax.swing.GroupLayout(MenuCampo.getContentPane());
        MenuCampo.getContentPane().setLayout(MenuCampoLayout);
        MenuCampoLayout.setHorizontalGroup(
            MenuCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuCampoLayout.setVerticalGroup(
            MenuCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCampoLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CrearCampos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        CrearCampos.setTitle("Crear Campos");

        jPanel11.setBackground(new java.awt.Color(0, 153, 51));

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Crear Campos");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Nombre del atributo:");

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Tipo de dato:");

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Longitud del atributo:");

        jLabel10.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Llave primaria:");

        tipoDato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "String", "double", "char" }));
        tipoDato.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoDatoItemStateChanged(evt);
            }
        });
        tipoDato.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tipoDatoPropertyChange(evt);
            }
        });

        isKey.setText("Si");

        btnCrearCampos.setText("Crear");
        btnCrearCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearCamposMouseClicked(evt);
            }
        });

        jButton7.setText("Regresar");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(isKey, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                                .addComponent(btnCrearCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tipoDato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameAtributo)
                            .addComponent(longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(77, 77, 77))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addContainerGap(27, Short.MAX_VALUE)
                        .addComponent(nameAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(tipoDato, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(longitud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(isKey)
                    .addComponent(btnCrearCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout CrearCamposLayout = new javax.swing.GroupLayout(CrearCampos.getContentPane());
        CrearCampos.getContentPane().setLayout(CrearCamposLayout);
        CrearCamposLayout.setHorizontalGroup(
            CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CrearCamposLayout.setVerticalGroup(
            CrearCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearCamposLayout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ListarCampos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ListarCampos.setTitle("Listar Campos");

        jPanel13.setBackground(new java.awt.Color(0, 153, 51));

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Listar Campos");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(314, 314, 314))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel11)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton6.setText("Regresar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ListarCamposLayout = new javax.swing.GroupLayout(ListarCampos.getContentPane());
        ListarCampos.getContentPane().setLayout(ListarCamposLayout);
        ListarCamposLayout.setHorizontalGroup(
            ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ListarCamposLayout.setVerticalGroup(
            ListarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarCamposLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ModificarCampos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ModificarCampos.setTitle("Modificar Campos");

        jPanel15.setBackground(new java.awt.Color(0, 153, 51));

        jLabel12.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Modificar Campos");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(270, 270, 270))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel12)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jButton8.setText("Regresar");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        bttnModificarCampos.setText("Modificar");
        bttnModificarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttnModificarCamposMouseClicked(evt);
            }
        });

        jButton13.setText("Salvar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(bttnModificarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bttnModificarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );

        javax.swing.GroupLayout ModificarCamposLayout = new javax.swing.GroupLayout(ModificarCampos.getContentPane());
        ModificarCampos.getContentPane().setLayout(ModificarCamposLayout);
        ModificarCamposLayout.setHorizontalGroup(
            ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ModificarCamposLayout.setVerticalGroup(
            ModificarCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificarCamposLayout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BorrarCampo.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        BorrarCampo.setTitle("Borrar Campos");

        jPanel17.setBackground(new java.awt.Color(0, 153, 51));

        jLabel13.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Borrar Campos");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(293, 293, 293))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel13)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jButton9.setText("Regresar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        btnBorrarCampo.setText("Borrar");
        btnBorrarCampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarCampoMouseClicked(evt);
            }
        });

        jButton14.setText("Salvar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnBorrarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrarCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        javax.swing.GroupLayout BorrarCampoLayout = new javax.swing.GroupLayout(BorrarCampo.getContentPane());
        BorrarCampo.getContentPane().setLayout(BorrarCampoLayout);
        BorrarCampoLayout.setHorizontalGroup(
            BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BorrarCampoLayout.setVerticalGroup(
            BorrarCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorrarCampoLayout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        MenuRegistro.setTitle("Menu Registro");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        btnCrearRegistro.setText("Crear Registro");
        btnCrearRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearRegistroMouseClicked(evt);
            }
        });

        btnListarRegistros.setText("Listar Registros");
        btnListarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarRegistrosMouseClicked(evt);
            }
        });

        btnModificarRegistros.setText("Modificar Registros");
        btnModificarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarRegistrosMouseClicked(evt);
            }
        });

        btnBuscarRegistros.setText("Buscar Registros");
        btnBuscarRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarRegistrosMouseClicked(evt);
            }
        });

        btnEliminarRegistro.setText("Eliminar Registros");
        btnEliminarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarRegistroMouseClicked(evt);
            }
        });

        btnCruzarArchivo.setText("Cruzar Archivos");
        btnCruzarArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCruzarArchivoMouseClicked(evt);
            }
        });

        jButton21.setText("Regresar");
        jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton21MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnModificarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCruzarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCruzarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        jPanel8.setBackground(new java.awt.Color(0, 153, 51));

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Menu Registro");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MenuRegistroLayout = new javax.swing.GroupLayout(MenuRegistro.getContentPane());
        MenuRegistro.getContentPane().setLayout(MenuRegistroLayout);
        MenuRegistroLayout.setHorizontalGroup(
            MenuRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuRegistroLayout.setVerticalGroup(
            MenuRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuRegistroLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CrearRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        CrearRegistro.setTitle("Crear Registro");

        jPanel19.setBackground(new java.awt.Color(0, 153, 51));

        jLabel14.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Crear Registro");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTable4);

        bttnCrearRegistro.setText("Crear Registro");
        bttnCrearRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttnCrearRegistroMouseClicked(evt);
            }
        });

        jButton23.setText("Regresar");
        jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton23MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(bttnCrearRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnCrearRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CrearRegistroLayout = new javax.swing.GroupLayout(CrearRegistro.getContentPane());
        CrearRegistro.getContentPane().setLayout(CrearRegistroLayout);
        CrearRegistroLayout.setHorizontalGroup(
            CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CrearRegistroLayout.setVerticalGroup(
            CrearRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearRegistroLayout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ListarRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ListarRegistro.setTitle("Listar Registro");

        jPanel21.setBackground(new java.awt.Color(0, 153, 51));

        jLabel15.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Listar Registros");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(314, 314, 314))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel15)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable5);

        jButton16.setText("Regresar");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ListarRegistroLayout = new javax.swing.GroupLayout(ListarRegistro.getContentPane());
        ListarRegistro.getContentPane().setLayout(ListarRegistroLayout);
        ListarRegistroLayout.setHorizontalGroup(
            ListarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ListarRegistroLayout.setVerticalGroup(
            ListarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarRegistroLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ModificarRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ModificarRegistro.setTitle("Modificar Registro");

        jPanel23.setBackground(new java.awt.Color(0, 153, 51));

        jLabel16.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Modificar Registros");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(340, 340, 340))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(17, 17, 17))
        );

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTable6);

        jButton17.setText("Regresar");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });

        bttnModificarRegistro.setText("Modificar");
        bttnModificarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttnModificarRegistroMouseClicked(evt);
            }
        });

        jButton22.setText("Filtrar");
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton22MouseClicked(evt);
            }
        });

        jTextField1.setText("Ingrese la llave primaria");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel24Layout.createSequentialGroup()
                            .addGap(162, 162, 162)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(125, 125, 125)
                            .addComponent(bttnModificarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(102, 102, 102))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnModificarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout ModificarRegistroLayout = new javax.swing.GroupLayout(ModificarRegistro.getContentPane());
        ModificarRegistro.getContentPane().setLayout(ModificarRegistroLayout);
        ModificarRegistroLayout.setHorizontalGroup(
            ModificarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ModificarRegistroLayout.setVerticalGroup(
            ModificarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ModificarRegistroLayout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BuscarRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        BuscarRegistro.setTitle("Buscar Registro");

        jPanel25.setBackground(new java.awt.Color(0, 153, 51));

        jLabel17.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Buscar Registros");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(363, 363, 363))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(15, 15, 15))
        );

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(jTable7);

        jButton24.setText("Regresar");
        jButton24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton24MouseClicked(evt);
            }
        });

        jButton26.setText("Filtrar");
        jButton26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton26MouseClicked(evt);
            }
        });

        jTextField2.setText("Ingrese la llave primaria");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addComponent(jTextField2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(374, 374, 374))))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout BuscarRegistroLayout = new javax.swing.GroupLayout(BuscarRegistro.getContentPane());
        BuscarRegistro.getContentPane().setLayout(BuscarRegistroLayout);
        BuscarRegistroLayout.setHorizontalGroup(
            BuscarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BuscarRegistroLayout.setVerticalGroup(
            BuscarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarRegistroLayout.createSequentialGroup()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EliminarRegistro.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        EliminarRegistro.setTitle("Eliminar Registro");

        jPanel27.setBackground(new java.awt.Color(0, 153, 51));

        jLabel18.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Eliminar Registros");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(340, 340, 340))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(17, 17, 17))
        );

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(jTable8);

        jButton25.setText("Regresar");
        jButton25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton25MouseClicked(evt);
            }
        });

        bttnEliminarRegistro.setText("Eliminar");
        bttnEliminarRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttnEliminarRegistroMouseClicked(evt);
            }
        });

        jButton28.setText("Filtrar");
        jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton28MouseClicked(evt);
            }
        });

        jTextField3.setText("Ingrese la llave primaria");
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jTextField3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel28Layout.createSequentialGroup()
                            .addGap(162, 162, 162)
                            .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(125, 125, 125)
                            .addComponent(bttnEliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(102, 102, 102))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnEliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout EliminarRegistroLayout = new javax.swing.GroupLayout(EliminarRegistro.getContentPane());
        EliminarRegistro.getContentPane().setLayout(EliminarRegistroLayout);
        EliminarRegistroLayout.setHorizontalGroup(
            EliminarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        EliminarRegistroLayout.setVerticalGroup(
            EliminarRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EliminarRegistroLayout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CruzarArchivos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        CruzarArchivos.setTitle("Cruzar Archivos");

        jPanel37.setBackground(new java.awt.Color(0, 153, 51));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Cruzar Archivos");

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Campos Archivo Actual");

        btnSeleccionarArchivo.setText("Seleccionar Archivo");

        jLabel22.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Campos Archivo 2");

        btnCruzarArchivos.setText("Cruzar Archivos");

        jLabel23.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("---------------> <---------------");

        jButton30.setText("Regresar");
        jButton30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton30MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(camposArchivoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSeleccionarArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(camposArchivo2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCruzarArchivos, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(btnSeleccionarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(camposArchivo2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(camposArchivoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jLabel23)
                .addGap(33, 33, 33)
                .addComponent(btnCruzarArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CruzarArchivosLayout = new javax.swing.GroupLayout(CruzarArchivos.getContentPane());
        CruzarArchivos.getContentPane().setLayout(CruzarArchivosLayout);
        CruzarArchivosLayout.setHorizontalGroup(
            CruzarArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CruzarArchivosLayout.setVerticalGroup(
            CruzarArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CruzarArchivosLayout.createSequentialGroup()
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuIndice.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        MenuIndice.setTitle("Menu Indice");

        jPanel29.setBackground(new java.awt.Color(0, 153, 51));

        ArchivoEnUso3.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        ArchivoEnUso3.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso3.setText("Menu Indices");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso3)
                .addGap(100, 100, 100))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(ArchivoEnUso3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));

        btnCrearIndices.setText("Crear Indices");
        btnCrearIndices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearIndicesMouseClicked(evt);
            }
        });

        btnReIndexar.setText("Re-Indexar Archivos");
        btnReIndexar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReIndexarMouseClicked(evt);
            }
        });

        btnBuscarReIndexados.setText("Buscar Re-Indexados");
        btnBuscarReIndexados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarReIndexadosMouseClicked(evt);
            }
        });

        jButton15.setText("Regresar");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnBuscarReIndexados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReIndexar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCrearIndices, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(btnCrearIndices, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReIndexar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarReIndexados, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout MenuIndiceLayout = new javax.swing.GroupLayout(MenuIndice.getContentPane());
        MenuIndice.getContentPane().setLayout(MenuIndiceLayout);
        MenuIndiceLayout.setHorizontalGroup(
            MenuIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuIndiceLayout.setVerticalGroup(
            MenuIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuIndiceLayout.createSequentialGroup()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CrearIndice.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        CrearIndice.setTitle("Crear Indice");

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));

        bttnCrearIndices.setText("Crear Indices");
        bttnCrearIndices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttnCrearIndicesMouseClicked(evt);
            }
        });

        jButton18.setText("Regresar");
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton18MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Nueva Llave para Indexar:");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LlaveSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(bttnCrearIndices, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LlaveSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnCrearIndices, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        jPanel34.setBackground(new java.awt.Color(0, 153, 51));

        ArchivoEnUso4.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        ArchivoEnUso4.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso4.setText("Crear Indice");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso4)
                .addGap(218, 218, 218))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ArchivoEnUso4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CrearIndiceLayout = new javax.swing.GroupLayout(CrearIndice.getContentPane());
        CrearIndice.getContentPane().setLayout(CrearIndiceLayout);
        CrearIndiceLayout.setHorizontalGroup(
            CrearIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CrearIndiceLayout.setVerticalGroup(
            CrearIndiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearIndiceLayout.createSequentialGroup()
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BuscarReIndexados.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        BuscarReIndexados.setTitle("Buscar Re-Indexados");

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane10.setViewportView(jTable9);

        jButton27.setText("Regresar");
        jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton27MouseClicked(evt);
            }
        });

        jButton29.setText("Filtrar");
        jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton29MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(jTextField4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(374, 374, 374))))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel32.setBackground(new java.awt.Color(0, 153, 51));

        jLabel19.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Buscar Re-Indexados");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BuscarReIndexadosLayout = new javax.swing.GroupLayout(BuscarReIndexados.getContentPane());
        BuscarReIndexados.getContentPane().setLayout(BuscarReIndexadosLayout);
        BuscarReIndexadosLayout.setHorizontalGroup(
            BuscarReIndexadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BuscarReIndexadosLayout.setVerticalGroup(
            BuscarReIndexadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarReIndexadosLayout.createSequentialGroup()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));

        btnExcel.setText("Exportar a Excel");
        btnExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcelMouseClicked(evt);
            }
        });

        btnReIndexar1.setText("Exportar XML con Schema");
        btnReIndexar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReIndexar1MouseClicked(evt);
            }
        });

        jButton19.setText("Regresar");
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton19MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReIndexar1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(189, 189, 189))))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnReIndexar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );

        jPanel36.setBackground(new java.awt.Color(0, 153, 51));

        ArchivoEnUso5.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        ArchivoEnUso5.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso5.setText("Menu Estandarizacion");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso5)
                .addGap(68, 68, 68))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ArchivoEnUso5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MenuEstandarizacionLayout = new javax.swing.GroupLayout(MenuEstandarizacion.getContentPane());
        MenuEstandarizacion.getContentPane().setLayout(MenuEstandarizacionLayout);
        MenuEstandarizacionLayout.setHorizontalGroup(
            MenuEstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuEstandarizacionLayout.setVerticalGroup(
            MenuEstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuEstandarizacionLayout.createSequentialGroup()
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Standard File Manager");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        ArchivoEnUso.setFont(new java.awt.Font("Georgia", 1, 20)); // NOI18N
        ArchivoEnUso.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso.setText("Archivo en uso: N/A");

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Archivo");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 204));
        jButton2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Campos");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 204));
        jButton3.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Registros");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 204));
        jButton4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Indices");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 204));
        jButton5.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Estandarizacion");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(204, 0, 0));
        btnSalir.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalirMouseExited(evt);
            }
        });

        archivoAbierto.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        archivoAbierto.setForeground(new java.awt.Color(0, 0, 0));
        archivoAbierto.setText("Archivo abierto: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso)
                .addGap(257, 257, 257))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(archivoAbierto, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(archivoAbierto)
                .addGap(203, 203, 203)
                .addComponent(ArchivoEnUso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 51));

        ArchivoEnUso1.setFont(new java.awt.Font("Georgia", 1, 30)); // NOI18N
        ArchivoEnUso1.setForeground(new java.awt.Color(255, 255, 255));
        ArchivoEnUso1.setText("Standard File Manager");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso1)
                .addGap(155, 155, 155))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(ArchivoEnUso1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String nombreArchivo(String archivoAbierto) {
        int pos = archivoAbierto.lastIndexOf('\\');
        String nombreArchivo = "";

        if (pos != -1) { //ver si la encontró
            nombreArchivo = archivoAbierto.substring(pos + 1);
        } else {
            nombreArchivo = archivoAbierto;
        }

        return nombreArchivo;
    }
    private void btnCrearArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearArchivoMouseClicked
        try {
            if (nameArchivo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese un nombre para su archivo.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String name = nameArchivo.getText();
            archivoAbierto.setText("Archivo Abierto: " + name);
            String contenido = "######|#######|\n";

            JFileChooser fileChooser = new JFileChooser("./");
            fileChooser.setDialogTitle("Guardar archivo");
            fileChooser.setSelectedFile(new File(name + ".txt")); // Cambiado a .txt
            fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos de Texto", "txt"));
            AmTree = new AdminBTree(name);
            int userSelection = fileChooser.showSaveDialog(null);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                if (!fileToSave.exists()) {
                    fileToSave.createNewFile();
                    try ( BufferedWriter bw = new BufferedWriter(new FileWriter(fileToSave))) {
                        bw.write(contenido);
                    }
                    JOptionPane.showMessageDialog(null, "Archivo creado exitosamente");
                    nameArchivo.setText("");
                    archivoActual = fileToSave.getAbsolutePath();
                    NuevoArchivo.setVisible(false);
                    MenuArchivo.setVisible(false);
                    this.setVisible(true);
                    this.setLocationRelativeTo(null);
                } else {
                    JOptionPane.showMessageDialog(null, "Ya existe un archivo con ese nombre");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selección de archivo cancelada.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Hubo un error");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCrearArchivoMouseClicked
    public String obtenerNombreArchivoSinExtension(String nombreArchivo) {
        if (nombreArchivo != null && nombreArchivo.endsWith(".txt")) {
            return nombreArchivo.substring(0, nombreArchivo.lastIndexOf(".txt")); //hace un nuevo string desde el inicio hasta antes de .edd2
        }
        return nombreArchivo;
    }
    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        NuevoArchivo.setVisible(false);
        MenuArchivo.pack();
        MenuArchivo.setModal(true);
        MenuArchivo.setLocationRelativeTo(this);
        MenuArchivo.setVisible(true);
        nameArchivo.setText("");
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        MenuArchivo.setVisible(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton11MouseClicked

    private void btnNuevoArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoArchivoMouseClicked
        MenuArchivo.setVisible(false);
        NuevoArchivo.pack();
        NuevoArchivo.setModal(true);
        NuevoArchivo.setLocationRelativeTo(this);
        NuevoArchivo.setVisible(true);
    }//GEN-LAST:event_btnNuevoArchivoMouseClicked


    private void btnAbrirArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirArchivoMouseClicked

        if (archivoActual.isEmpty()) {
            JFileChooser fileChooser = new JFileChooser("./");
            fileChooser.setDialogTitle("Abrir archivo");
            fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos de Texto", "txt")); // Cambiado a archivos de texto
            boolean llave;
            int userSelection = fileChooser.showOpenDialog(null);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToOpen = fileChooser.getSelectedFile();
                archivoActual = fileToOpen.getAbsolutePath();
                System.out.println("Archivo actual: " + archivoActual);

                archivoAbierto.setText("Archivo abierto: " + nombreArchivo(archivoActual));

                AmTree = new AdminBTree(obtenerNombreArchivoSinExtension(archivoActual));
                System.out.println("este " + obtenerNombreArchivoSinExtension(archivoActual));
                try ( BufferedReader br = new BufferedReader(new FileReader(archivoActual))) {
                    String linea;
                    boolean primeraLinea = true;
                    boolean segundaLinea = true;
                    int contador = 0;

                    while ((linea = br.readLine()) != null && contador < 2) {
                        if (primeraLinea) {
                            metadata = linea;
                            System.out.println("Metadata: " + metadata);
                            primeraLinea = false;
                            contador++;
                        } else if (segundaLinea) {
                            System.out.println(linea);
                            String[] partes = linea.split("\\|");
                            for (int i = 1; i < partes.length; i += 4) {
                                if (i + 3 < partes.length) {
                                    String nombre = partes[i];
                                    String tipo = partes[i + 1];
                                    int longitud = Integer.parseInt(partes[i + 2]);

                                    llave = "1".equals(partes[i + 3]);
                                    if (llave) {
                                        keyExists = true;
                                    }
                                    Campo campo = new Campo(nombre, tipo, longitud, llave);
                                    campos.add(campo);
                                }
                            }
                            segundaLinea = false;
                            contador++;
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }

                try { //agarrar la cantidad
                    byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                    String content = new String(fileContent);

                    int firstLineEnd = content.indexOf('\n');
                    if (firstLineEnd == -1) {
                        System.out.println("El archivo no contiene una línea completa.");
                        return;
                    }

                    String firstLine = content.substring(0, firstLineEnd + 1);
                    String[] parts = firstLine.split("\\|");
                    if (parts.length < 2) {
                        System.out.println("Formato de línea incorrecto.");
                        return;
                    }

                    String leftPart = parts[0];
                    String rightPart = parts[1];
                    leftPart = leftPart.replace("#", "");
                    if (leftPart != "") {
                        cantidad = Integer.parseInt(leftPart);
                    } else {
                        cantidad = 0;
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Algo salió mal");
                }

                for (Campo campo : campos) {
                    System.out.println(campo);
                }

                for (String registro : registros) {
                    System.out.println(registro);
                }
                AmTree.cargarArchivo();
                AmTree.getArbolCargado().printTree();
                JOptionPane.showMessageDialog(null, "Archivo abierto exitosamente");
            } else {
                JOptionPane.showMessageDialog(null, "Selección de archivo cancelada.");
                return;
            }

        } else {
            JOptionPane.showMessageDialog(null, "Archivo abierto actualmente, cierre el archivo en uso");
            return;
        }

        try {
            cargarAvailList();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAbrirArchivoMouseClicked

    void salvar() {
        if (archivoActual != null && !archivoActual.isEmpty()) {
            String path = archivoActual;
            int f = 350;
            StringBuilder nuevaLinea = new StringBuilder();
            Set<String> camposExistentes = new HashSet<>();

            for (Campo campo : campos) {
                String campoStr = "";
                if (campo.isLlave()) {
                    campoStr = "|" + campo.getNombre() + "|" + campo.getTipo() + "|" + campo.getLongitud() + "|" + 1;
                } else {
                    campoStr = "|" + campo.getNombre() + "|" + campo.getTipo() + "|" + campo.getLongitud() + "|" + 0;
                }

                if (!camposExistentes.contains(campoStr)) {
                    nuevaLinea.append(campoStr);
                    camposExistentes.add(campoStr);
                }
            }
            while (nuevaLinea.length() != f) {
                nuevaLinea.append("-");
            }

            System.out.println(nuevaLinea);

            try ( RandomAccessFile raf = new RandomAccessFile(path, "rw")) {

                raf.readLine();

                long pos = raf.getFilePointer();

                raf.seek(pos);
                raf.writeBytes(nuevaLinea.toString() + "\n");
                JOptionPane.showMessageDialog(null, "Archivo salvado exitosamente.");
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay un archivo abierto para salvar");
        }
    }

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        salvar();
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseClicked
        if (archivoActual.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay un archivo abierto para salvar");
            return;
        }

        int r = JOptionPane.showConfirmDialog(jTable3, "Desea Guardar antes de cerrar archivo?", "Guardar", YES_NO_OPTION);
        if (r == 0) {
            if (!archivoActual.isEmpty()) {
                salvar();
            } else {
                JOptionPane.showMessageDialog(null, "No hay un archivo abierto para salvar");
            }
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            m.setRowCount(0);
            jTable1.setModel(m);
            DefaultTableModel m1 = (DefaultTableModel) jTable2.getModel();
            m1.setRowCount(0);
            jTable2.setModel(m1);
            DefaultTableModel m2 = (DefaultTableModel) jTable3.getModel();
            m2.setRowCount(0);
            jTable3.setModel(m2);
            archivoActual = "";
            campos.clear();

            JOptionPane.showMessageDialog(null, "Archivo Cerrado");

        } else {
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            m.setRowCount(0);
            jTable1.setModel(m);
            DefaultTableModel m1 = (DefaultTableModel) jTable2.getModel();
            m1.setRowCount(0);
            jTable2.setModel(m1);
            DefaultTableModel m2 = (DefaultTableModel) jTable3.getModel();
            m2.setRowCount(0);
            jTable3.setModel(m2);
            archivoActual = "";
            campos.clear();

            JOptionPane.showMessageDialog(null, "Archivo Cerrado");
        }


    }//GEN-LAST:event_btnCerrarMouseClicked

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked

        if (!archivoActual.isEmpty()) {
            int r = JOptionPane.showConfirmDialog(jTable3, "Desea Guardar antes de cerrar programa?", "Guardar", YES_NO_OPTION);
            if (r == 0) {
                salvar();
                System.exit(0);
            } else {
                System.exit(0);
            }

        } else {
            System.exit(0);
        }


    }//GEN-LAST:event_btnSalirMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.setVisible(false);
        MenuArchivo.pack();
        MenuArchivo.setModal(true);
        MenuArchivo.setLocationRelativeTo(this);
        MenuArchivo.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (archivoActual == null || archivoActual.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay un archivo abierto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.setVisible(false);
        MenuCampo.pack();
        MenuCampo.setModal(true);
        MenuCampo.setLocationRelativeTo(this);
        MenuCampo.setVisible(true);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        MenuCampo.setVisible(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton10MouseClicked

    private void btnCrearCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearCamposMouseClicked
        if (btnCrearCampos.getText().equals("Modificar")) {

            String nombre = nameAtributo.getText();
            String tipo = tipoDato.getSelectedItem().toString();
//          int longi = (int) longitud.getValue();
            int longi = (int) longitud.getValue();
            boolean key = isKey.isSelected();
            Campo newCampo = new Campo();
            Set<String> nombres = new HashSet<>();
            boolean llaveExistente = false;

            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(null, "El nombre del campo no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (tipo.equals("int")) {
                longi = 1;

            } else if (tipo.equals("double")) {
                longi = 1;

            } else if (tipo.equals("float")) {
                longi = 1;
            } else if (tipo.equals("boolean")) {
                longi = 1;
            } else if (tipo.equals("char")) {
                longi = 1;
            }

            if (tipo.equals("String") && longi <= 0) {
                JOptionPane.showMessageDialog(null, "Longitud no válida.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            for (Campo campo : campos) {
                if (nombres.contains(campo.getNombre())) {
                    JOptionPane.showMessageDialog(null, "Error: Campo con nombre duplicado: " + campo.getNombre());
                    return;
                }
                if (campo.isLlave() && llaveExistente) {
                    JOptionPane.showMessageDialog(null, "Error: Ya existe una llave verdadera.");
                    return;
                }
                nombres.add(campo.getNombre());
                if (campo.isLlave()) {
                    llaveExistente = true;
                }
            }

            if (isKey.isSelected()) {
                if ((llaveExistente && !wasKey)) {
                    JOptionPane.showMessageDialog(null, "Error: Ya existe una llave primaria.");
                    return;
                }
                newCampo.setLlave(true);
                keyExists = true;
            } else {
                newCampo.setLlave(false);
                keyExists = false;
            }

            newCampo.setNombre(nombre);
            newCampo.setTipo(tipo);
            newCampo.setLongitud(longi);

            campos.remove(jTable2.getSelectedRow());
            campos.add(jTable2.getSelectedRow(), newCampo);

            llenar();

            JOptionPane.showMessageDialog(null, "Campo modificado exitosamente");
            longitud.setValue(1);
            nameAtributo.setText("");
            tipoDato.setSelectedIndex(1);
            CrearCampos.setVisible(false);
            MenuCampo.setVisible(false);
            ListarCampos.pack();
            ListarCampos.setModal(true);
            ListarCampos.setLocationRelativeTo(this);
            ListarCampos.setVisible(true);
        } else {
            String nombre = nameAtributo.getText();
            String tipo = tipoDato.getSelectedItem().toString();
            int longi = (int) longitud.getValue();
            boolean key = isKey.isSelected();
            Campo newCampo = new Campo();
            Set<String> nombres = new HashSet<>();
            boolean llaveExistente = false;

            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(null, "El nombre del campo no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (tipo.equals("int")) {
                longi = 1;
            } else if (tipo.equals("double")) {
                longi = 1;
            } else if (tipo.equals("float")) {
                longi = 1;
            } else if (tipo.equals("boolean")) {
                longi = 1;
            } else if (tipo.equals("char")) {
                longi = 1;
            }
            if (longi <= 0) {
                JOptionPane.showMessageDialog(null, "Longitud no válida.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            for (Campo campo : campos) {
                if (nombres.contains(campo.getNombre())) {
                    JOptionPane.showMessageDialog(null, "Error: Campo con nombre duplicado: " + campo.getNombre());
                    return;
                }
                if (campo.isLlave() && llaveExistente) {
                    JOptionPane.showMessageDialog(null, "Error: Ya existe una llave verdadera.");
                    return;
                }
                nombres.add(campo.getNombre());
                if (campo.isLlave()) {
                    llaveExistente = true;
                }
            }

            if (nombres.contains(nombre)) {
                JOptionPane.showMessageDialog(null, "Error: Ya existe un campo con el nombre: " + nombre);
                return;
            }

            if (isKey.isSelected()) {
                if (llaveExistente) {
                    JOptionPane.showMessageDialog(null, "Error: Ya existe una llave primaria.");
                    return;
                }
                newCampo.setLlave(true);
                keyExists = true;
            } else {
                newCampo.setLlave(false);
            }

            newCampo.setNombre(nombre);
            newCampo.setTipo(tipo);
            newCampo.setLongitud(longi);

            campos.add(newCampo);

            System.out.println("Campos agregados");
            for (Campo c : campos) {
                System.out.println(c);
            }

            JOptionPane.showMessageDialog(null, "Campo creado correctamente");
            longitud.setValue(1);
            nameAtributo.setText("");
            tipoDato.setSelectedIndex(1);
            if (keyExists) {
                isKey.setEnabled(false);
                isKey.setSelected(false);
            } else {
                isKey.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnCrearCamposMouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        if (btnCrearCampos.getText().equals("Modificar")) {
            btnCrearCampos.setText("Crear");
            jLabel6.setText("Crear Campos");
            nameAtributo.setText("");
            isKey.setSelected(false);
            CrearCampos.setVisible(false);
            ModificarCampos.pack();
            ModificarCampos.setModal(true);
            ModificarCampos.setLocationRelativeTo(this);
            ModificarCampos.setVisible(true);
        } else {
            CrearCampos.setVisible(false);
            MenuCampo.pack();
            MenuCampo.setModal(true);
            MenuCampo.setLocationRelativeTo(this);
            MenuCampo.setVisible(true);
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void btnCrearCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearCampoMouseClicked
        if (cantidad == 0) {
            if (keyExists) {
                isKey.setEnabled(false);
            }
            MenuCampo.setVisible(false);
            CrearCampos.pack();
            CrearCampos.setModal(true);
            CrearCampos.setLocationRelativeTo(this);
            CrearCampos.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Ya existen registros.", "Error", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_btnCrearCampoMouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        ListarCampos.setVisible(false);
        MenuCampo.pack();
        MenuCampo.setModal(true);
        MenuCampo.setLocationRelativeTo(this);
        MenuCampo.setVisible(true);
    }//GEN-LAST:event_jButton6MouseClicked

    private void btnModificarCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarCampoMouseClicked

        if (cantidad == 0) {
            if (!campos.isEmpty() && cantidad == 0) {
                llenar1();

            } else if (!registros.isEmpty()) {
                JOptionPane.showMessageDialog(this, "ya cuenta con registros, no podra modificar");
                return;
            } else {
                JOptionPane.showMessageDialog(this, "No hay campos para modificar.");
                return;
            }
            MenuCampo.setVisible(false);
            ModificarCampos.pack();
            ModificarCampos.setModal(true);
            ModificarCampos.setLocationRelativeTo(this);
            ModificarCampos.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Ya existen registros.", "Error", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_btnModificarCampoMouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        ModificarCampos.setVisible(false);
        MenuCampo.pack();
        MenuCampo.setModal(true);
        MenuCampo.setLocationRelativeTo(this);
        MenuCampo.setVisible(true);
    }//GEN-LAST:event_jButton8MouseClicked

    private void bttnModificarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnModificarCamposMouseClicked
        int row = jTable2.getSelectedRow();
        if (row >= 0) {
            isKey.setEnabled(true);
            /*Abrir ventana CrearCampos*/
            btnCrearCampos.setText("Modificar");
            jLabel6.setText("Modificar Campos");

            nombreMod = campos.get(jTable2.getSelectedRow()).getNombre();
            nameAtributo.setText(campos.get(jTable2.getSelectedRow()).getNombre());
            tipoDato.setSelectedItem(campos.get(jTable2.getSelectedRow()).getTipo());
            longitud.setValue(campos.get(jTable2.getSelectedRow()).getLongitud());
            isKey.setSelected(campos.get(jTable2.getSelectedRow()).isLlave());

            wasKey = campos.get(jTable2.getSelectedRow()).isLlave();

            ModificarCampos.setVisible(false);
            CrearCampos.pack();
            CrearCampos.setModal(true);
            CrearCampos.setLocationRelativeTo(this);
            CrearCampos.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(ModificarCampos, "Tiene que escoger uno de los campos");
        }
    }//GEN-LAST:event_bttnModificarCamposMouseClicked

    private void btnEliminarCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarCampoMouseClicked
        if (cantidad == 0) {
            if (!campos.isEmpty() && cantidad == 0) {
                llenar2();
            } else if (!registros.isEmpty()) {
                JOptionPane.showMessageDialog(this, "ya cuenta con registros, no podra Eliminar");
                return;
            } else {
                JOptionPane.showMessageDialog(null, "No hay campos para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            MenuCampo.setVisible(false);
            BorrarCampo.pack();
            BorrarCampo.setVisible(true);
            BorrarCampo.setModal(true);
            BorrarCampo.setLocationRelativeTo(this);
        } else {
            JOptionPane.showMessageDialog(null, "Ya existen registros.", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnEliminarCampoMouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        BorrarCampo.setVisible(false);
        MenuCampo.pack();
        MenuCampo.setVisible(true);
        MenuCampo.setModal(true);
        MenuCampo.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton9MouseClicked

    private void btnBorrarCampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarCampoMouseClicked

        if (jTable3.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un archivo.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int r = JOptionPane.showConfirmDialog(jTable3, "Desea eliminar el campo?", "Eliminar Campo", YES_NO_OPTION);
            if (r == 0) {
                int selectedIndex = jTable3.getSelectedRow();
                campos.remove(selectedIndex);
                System.out.println(selectedIndex);
                for (Campo campo : campos) {
                    System.out.println(campo);
                }
                ((DefaultTableModel) jTable3.getModel()).removeRow(selectedIndex);
            }
        }
    }//GEN-LAST:event_btnBorrarCampoMouseClicked

    public class MiRenderer extends DefaultTableCellRenderer {

        private ArrayList<Campo> camposGuardados;

        public MiRenderer(ArrayList<Campo> camposGuardados) {
            this.camposGuardados = camposGuardados;
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            DefaultTableModel model = (DefaultTableModel) table.getModel();

            String nombreCampo = (String) model.getValueAt(row, 0);
            String tipoCampo = (String) model.getValueAt(row, 1);
            int longitudCampo = (int) model.getValueAt(row, 2);
            boolean boolcampo = (Boolean) model.getValueAt(row, 3);

            boolean modificado = camposGuardados.stream().noneMatch(campo
                    -> campo.getNombre().equals(nombreCampo)
                    && campo.getTipo().equals(tipoCampo)
                    && campo.getLongitud() == longitudCampo
                    && campo.isLlave() == boolcampo
            );

            if (modificado) {
                c.setBackground(new Color(255, 182, 193)); // Rojo claro
            } else {
                c.setBackground(Color.WHITE); // Blanco para los no modificados
            }

            return c;
        }
    }

    void llenar() {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        ArrayList<Campo> campos1 = new ArrayList<>();

        try ( BufferedReader br = new BufferedReader(new FileReader(archivoActual))) {
            String linea;
            boolean primeraLinea = true;
            boolean segundaLinea = true;
            while ((linea = br.readLine()) != null) {
                if (primeraLinea) {
                    primeraLinea = false;
                } else if (segundaLinea) {
                    String[] partes = linea.split("\\|");
                    for (int i = 1; i < partes.length; i += 4) {
                        if (i + 3 < partes.length) {
                            String nombre = partes[i];
                            String tipo = partes[i + 1];
                            int longitud = Integer.parseInt(partes[i + 2]);
                            boolean llave = "1".equals(partes[i + 3]);

                            Campo campo = new Campo(nombre, tipo, longitud, llave);
                            campos1.add(campo);
                        }
                    }
                    segundaLinea = false;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("lista para color:");
        for (Campo campo1 : campos1) {
            System.out.println(campo1);
        }
        try {
            String[] titulos = {"Nombre", "Tipo", "Longitud", "Es Llave?"};
            DefaultTableModel m = new DefaultTableModel(titulos, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (Campo c : campos) {
                Object[] row = {c.getNombre(), c.getTipo(), c.getLongitud(), c.isLlave()};
                m.addRow(row);
            }

            jTable1.setModel(m);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        jTable1.setDefaultRenderer(Object.class, new MiRenderer(campos1));
    }

    void llenar1() {
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        modelo.setRowCount(0);
        ArrayList<Campo> campos1 = new ArrayList<>();

        try ( BufferedReader br = new BufferedReader(new FileReader(archivoActual))) {
            String linea;
            boolean primeraLinea = true;
            boolean segundaLinea = true;
            while ((linea = br.readLine()) != null) {
                if (primeraLinea) {
                    primeraLinea = false;
                } else if (segundaLinea) {
                    String[] partes = linea.split("\\|");
                    for (int i = 1; i < partes.length; i += 4) {
                        if (i + 3 < partes.length) {
                            String nombre = partes[i];
                            String tipo = partes[i + 1];
                            int longitud = Integer.parseInt(partes[i + 2]);
                            boolean llave = "1".equals(partes[i + 3]);

                            Campo campo = new Campo(nombre, tipo, longitud, llave);
                            campos1.add(campo);
                        }
                    }
                    segundaLinea = false;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            String[] titulos = {"Nombre", "Tipo", "Longitud", "Es Llave?"};
            DefaultTableModel m = new DefaultTableModel(titulos, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (Campo c : campos) {
                Object[] row = {c.getNombre(), c.getTipo(), c.getLongitud(), c.isLlave()};
                m.addRow(row);
            }

            jTable2.setModel(m);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        jTable2.setDefaultRenderer(Object.class, new MiRenderer(campos1));
    }

    void llenar2() {
        DefaultTableModel modelo = (DefaultTableModel) jTable3.getModel();
        modelo.setRowCount(0);
        ArrayList<Campo> campos1 = new ArrayList<>();

        try ( BufferedReader br = new BufferedReader(new FileReader(archivoActual))) {
            String linea;
            boolean primeraLinea = true;
            boolean segundaLinea = true;
            while ((linea = br.readLine()) != null) {
                if (primeraLinea) {
                    primeraLinea = false;
                } else if (segundaLinea) {
                    String[] partes = linea.split("\\|");
                    for (int i = 1; i < partes.length; i += 4) {
                        if (i + 3 < partes.length) {
                            String nombre = partes[i];
                            String tipo = partes[i + 1];
                            int longitud = Integer.parseInt(partes[i + 2]);
                            boolean llave = "1".equals(partes[i + 3]);

                            Campo campo = new Campo(nombre, tipo, longitud, llave);
                            campos1.add(campo);
                        }
                    }
                    segundaLinea = false;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            String[] titulos = {"Nombre", "Tipo", "Longitud", "Es Llave?"};
            DefaultTableModel m = new DefaultTableModel(titulos, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (Campo c : campos) {
                Object[] row = {c.getNombre(), c.getTipo(), c.getLongitud(), c.isLlave()};
                m.addRow(row);
            }

            jTable3.setModel(m);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        jTable3.setDefaultRenderer(Object.class, new MiRenderer(campos1));
    }
    private void btnListarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarCampoActionPerformed
        if (!campos.isEmpty()) {
            llenar();
        } else {
            JOptionPane.showMessageDialog(this, "No hay campos para listar.");
            return;
        }
        MenuCampo.setVisible(false);
        ListarCampos.pack();
        ListarCampos.setModal(true);
        ListarCampos.setLocationRelativeTo(this);
        ListarCampos.setVisible(true);

    }//GEN-LAST:event_btnListarCampoActionPerformed

    private void tipoDatoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tipoDatoPropertyChange
        if (tipoDato.getSelectedItem().equals("String")) {
            longitud.setEnabled(true);
        } else {
            longitud.setEnabled(false);
        }
    }//GEN-LAST:event_tipoDatoPropertyChange

    private void tipoDatoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoDatoItemStateChanged
        if (tipoDato.getSelectedItem().equals("String")) {
            longitud.setEnabled(true);
            if (keyExists) {
                isKey.setEnabled(false);
            } else {
                isKey.setEnabled(true);
            }
        } else {
            isKey.setEnabled(false);
            longitud.setValue(1);
            longitud.setEnabled(false);
        }
    }//GEN-LAST:event_tipoDatoItemStateChanged

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        salvar();
        llenar1();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        salvar();
        llenar2();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void btnCrearRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearRegistroMouseClicked
        MenuRegistro.setVisible(false);
        MenuRegistro.setModal(false);

        jTable4.setModel(new CustomTableModel(new Object[][]{}, new String[]{"Campo", "Tipo de Dato", "Contenido"}));
        DefaultTableModel modelo = (DefaultTableModel) jTable4.getModel();
        for (Campo c : campos) {
            Object[] row = {c.getNombre(), c.getTipo()};
            modelo.addRow(row);
        }
        jTable4.setModel(modelo);

        abrirDialog(CrearRegistro);
    }//GEN-LAST:event_btnCrearRegistroMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (archivoActual.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay un archivo abierto.");
            return;
        }
        if (campos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay campos.");
            return;
        }
        this.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton21MouseClicked
        MenuRegistro.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton21MouseClicked

    private void jButton23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton23MouseClicked
        CrearRegistro.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton23MouseClicked

    private void bttnCrearRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnCrearRegistroMouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        String Registro = "";
        int longitudFija = 350;
        try {
            cargarAvailList();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!AvailList.isEmpty()) {
            try {
                // Agarrar lo que puso el usuario
                Key k;
                if (!validarContenido(model)) {
                    JOptionPane.showMessageDialog(null, "Contenido del registro inválido", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    for (int i = 0; i < model.getRowCount(); i++) {
                        if (i == model.getRowCount() - 1) {
                            Registro += (String) model.getValueAt(model.getRowCount() - 1, 2) + "/";
                        } else {
                            Registro += (String) model.getValueAt(i, 2) + "|";
                        }
                    }

                    while (Registro.length() < longitudFija) {
                        Registro += "-";
                    } // En todo esto solo se hace el registro

                    int lastAvailPos = AvailList.get(AvailList.size() - 1);
                    AvailList.remove(AvailList.size() - 1);

                    // Modificar el archivo directamente
                    try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "rw")) {
                        raf.seek(lastAvailPos);
                        raf.writeBytes(Registro);
                    }

                    if (AvailList.isEmpty()) {
                        try {
                            byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                            String content = new String(fileContent);

                            int firstLineEnd = content.indexOf('\n');
                            if (firstLineEnd == -1) {
                                System.out.println("El archivo no contiene una línea completa.");
                                return;
                            }

                            String firstLine = content.substring(0, firstLineEnd + 1);
                            String[] parts = firstLine.split("\\|");
                            if (parts.length < 2) {
                                System.out.println("Formato de línea incorrecto.");
                                return;
                            }

                            String leftPart = parts[0];
                            String replacedRight = "#######"; // Arreglar eso
                            String newFirstLine = leftPart + "|" + replacedRight + "|\n";
                            String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                            Files.write(Paths.get(archivoActual), newContent.getBytes());

                            System.out.println("Primera línea modificada y escrita en el archivo: " + newFirstLine);
                            for (Integer integer : AvailList) {
                                System.out.println("Número avail " + integer);
                            }

                        } catch (IOException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Algo salió mal");
                        }
                    }

                    if (!AvailList.isEmpty()) {
                        modificarLinea(archivoActual, -1, AvailList.get(AvailList.size() - 1));
                    }

                    for (Integer integer : AvailList) {
                        System.out.println("Número avail " + integer);
                    }
                    try {
                        byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                        String content = new String(fileContent);

                        int firstLineEnd = content.indexOf('\n');
                        if (firstLineEnd == -1) {
                            System.out.println("El archivo no contiene una línea completa.");
                            return;
                        }

                        String firstLine = content.substring(0, firstLineEnd + 1);
                        String[] parts = firstLine.split("\\|");
                        if (parts.length < 2) {
                            System.out.println("Formato de línea incorrecto.");
                            return;
                        }

                        String leftPart = parts[0];
                        String rightPart = parts[1];
                        leftPart = leftPart.replace("#", "");
                        int num = Integer.parseInt(leftPart);
                        num++;

                        String numero = "" + num;

                        while (numero.length() < 6) {
                            numero += "#";
                        }

                        String newFirstLine = numero + "|" + rightPart + "|\n";
                        String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                        Files.write(Paths.get(archivoActual), newContent.getBytes());
                        cantidad = num;
                        cargarAvailList();

                    } catch (IOException e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Algo salió mal");
                    }

                    int posLlave = 0;
                    for (int i = 0; i < campos.size(); i++) {
                        if (campos.get(i).isLlave()) {
                            posLlave = i;
                        }
                    }
                    if (Registro != null) {
                        String[] partes = Registro.split("\\|");
                        String s = partes[posLlave];

                        k = new Key(s, lastAvailPos);

                        AmTree.getArbolCargado().insert(AmTree.getArbolCargado().getRaiz(), k);

                        AmTree.escribirArchivo();

                        AmTree.getArbolCargado().printTree();
                    } else {
                        JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
                    }

                }

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Algo salió mal");
            }
            /*Limpiar tabla*/
            jTable4.setModel(new CustomTableModel(new Object[][]{}, new String[]{"Campo", "Tipo de Dato", "Contenido"}));
            DefaultTableModel modelo = (DefaultTableModel) jTable4.getModel();
            for (Campo c : campos) {
                Object[] row = {c.getNombre(), c.getTipo()};
                modelo.addRow(row);
            }

            jTable4.setModel(modelo);
            JOptionPane.showMessageDialog(this, "Registro creado y guardado correctamente");
        } else {
            Key k;
            if (!validarContenido(model)) {
                JOptionPane.showMessageDialog(null, "Contenido del registro inválido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                if (i == model.getRowCount() - 1) {
                    Registro += (String) model.getValueAt(model.getRowCount() - 1, 2) + "/";
                } else {
                    Registro += (String) model.getValueAt(i, 2) + "|";
                }
            }

            while (Registro.length() < longitudFija) {
                Registro += "-";
            }

            String path = archivoActual;

            int posLlave1 = 0;
            for (int i = 0; i < campos.size(); i++) {
                if (campos.get(i).isLlave()) {
                    posLlave1 = i;
                }
            }
            if (Registro != null) {
                String[] partes = Registro.split("\\|");
                String s = partes[posLlave1];

                k = new Key(s, 0);

                if (AmTree.getArbolCargado().Search(AmTree.getArbolCargado().getRaiz(), k) != null) {
                    JOptionPane.showMessageDialog(null, "Ingrese otro nombre para la llave Primaria.", "Llave duplicada.", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
            }

            try ( BufferedWriter bw = new BufferedWriter(new FileWriter(path, true))) {
                bw.write(Registro);
            } catch (IOException e) {
                e.printStackTrace();
            }

            try {
                byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                String content = new String(fileContent);

                int firstLineEnd = content.indexOf('\n');
                if (firstLineEnd == -1) {
                    System.out.println("El archivo no contiene una línea completa.");
                    return;
                }

                String firstLine = content.substring(0, firstLineEnd + 1);
                String[] parts = firstLine.split("\\|");
                if (parts.length < 2) {
                    System.out.println("Formato de línea incorrecto.");
                    return;
                }

                String leftPart = parts[0];
                String rightPart = parts[1];
                String numero = "";
                int num = 0;
                String cant = leftPart.replace("#", "");

                if (cant.isEmpty()) {
                    numero = "1";
                } else {
                    num = Integer.parseInt(cant);
                    num++;

                    numero = "" + num;
                }

                while (numero.length() < 6) {
                    numero += "#";
                }
                cantidad = num;
                String newFirstLine = numero + "|" + rightPart + "|\n";
                String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                Files.write(Paths.get(archivoActual), newContent.getBytes());

                cargarAvailList();

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Algo salió mal");
            }
            /*Limpiar tabla*/
            jTable4.setModel(new CustomTableModel(new Object[][]{}, new String[]{"Campo", "Tipo de Dato", "Contenido"}));
            DefaultTableModel modelo = (DefaultTableModel) jTable4.getModel();
            for (Campo c : campos) {
                Object[] row = {c.getNombre(), c.getTipo()};
                modelo.addRow(row);
            }

            jTable4.setModel(modelo);
            JOptionPane.showMessageDialog(this, "Registro creado y guardado exitosamente");
            System.out.println("");
            System.out.println("Registros agregados: ");
            for (int i = 0; i < registros.size(); i++) {
                System.out.println(registros.get(i));
            }

            int posLlave = 0;
            for (int i = 0; i < campos.size(); i++) {
                if (campos.get(i).isLlave()) {
                    posLlave = i;
                }
            }
            if (Registro != null) {
                String[] partes = Registro.split("\\|");
                String s = partes[posLlave];
                if (cantidad == 1) {
                    k = new Key(s, 367);
                } else {
                    int cant1 = 367;
                    for (int i = 0; i < cantidad - 1; i++) {
                        cant1 += 350; //antes estaba 351
                    }
                    k = new Key(s, cant1);
                }
                AmTree.getArbolCargado().insert(AmTree.getArbolCargado().getRaiz(), k);

                AmTree.escribirArchivo();

                AmTree.getArbolCargado().printTree();
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_bttnCrearRegistroMouseClicked

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseClicked
        ListarRegistro.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton16MouseClicked

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton17MouseClicked
        ModificarRegistro.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton17MouseClicked

    private void bttnModificarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnModificarRegistroMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        String Registro = "";
        if (!validarContenido(model)) {
            JOptionPane.showMessageDialog(null, "Contenido del registro invalido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            for (int i = 0; i < model.getRowCount(); i++) {
                if (i == model.getRowCount() - 1) {
                    Registro += (String) model.getValueAt(model.getRowCount() - 1, 2) + "/";
                } else {
                    Registro += (String) model.getValueAt(i, 2) + "|";
                }
            }
        }
        if (byteEncontrado != -1) {
            modificarRegistro(byteEncontrado, Registro);
        } else {
            JOptionPane.showMessageDialog(null, "No se modifico el registro", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_bttnModificarRegistroMouseClicked
    public void modificarRegistro(int byteEncontrado, String nuevoRegistro) {
        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "rw")) {
            if (byteEncontrado != -1) { // encontró el registro
                System.out.println(archivoActual);
                System.out.println(byteEncontrado);
                raf.seek(byteEncontrado);

                long currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                String lineaRegistro = raf.readLine();
                currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                System.out.println("Registro actual: " + lineaRegistro);
                System.out.println("Nuevo registro: " + nuevoRegistro);

                // Asegúrate de que el nuevo registro tenga la longitud correcta
                while (nuevoRegistro.length() < 350) {
                    nuevoRegistro += "-";
                }

                // Escribir el nuevo registro en la posición del registro antiguo
                raf.seek(byteEncontrado);
                raf.writeBytes(nuevoRegistro);

                System.out.println("Registro modificado exitosamente.");
                JOptionPane.showMessageDialog(null, "Registro modificado exitosamente.", "Modificacion Realizada", JOptionPane.ERROR_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Algo salió mal");
        }
    }
    private void jButton24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton24MouseClicked
        BuscarRegistro.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton24MouseClicked

    private void jButton25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton25MouseClicked
        EliminarRegistro.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton25MouseClicked
    public static void modificarLinea(String archivo, int numero, int posicionLinea) {
        try ( RandomAccessFile raf = new RandomAccessFile(archivo, "rw")) {
            raf.seek(posicionLinea);

            String linea = raf.readLine();
            if (linea != null) {
                String nuevoFormato = "*" + numero + "*";
                StringBuilder nuevaLinea = new StringBuilder();
                nuevaLinea.append(nuevoFormato);

                // Rellenar el resto de la línea con el contenido original, asegurando la longitud total de 350 caracteres
                if (nuevoFormato.length() < linea.length()) {
                    nuevaLinea.append(linea.substring(nuevoFormato.length()));
                }

                // Rellenar con guiones si la nueva línea es más corta de 350 caracteres
                while (nuevaLinea.length() < 350) {
                    nuevaLinea.append("-");
                }

                // Escribir la nueva línea en el archivo
                raf.seek(posicionLinea);
                raf.writeBytes(nuevaLinea.toString());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void bttnEliminarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnEliminarRegistroMouseClicked
        if (byteEncontrado != -1) {
            if (!AvailList.isEmpty()) {
                try {
                    cargarAvailList();
                    int lastAvailPos = AvailList.get(AvailList.size() - 1);
                    String newLine;
                    try ( RandomAccessFile file = new RandomAccessFile(archivoActual, "rw")) {
                        file.seek(lastAvailPos);
                        String line = file.readLine();
                        if (line == null) {
                            System.out.println("No se pudo leer la línea en la posición especificada.");
                            file.close();
                            return;
                        }
                        String[] parts = line.split("\\|");
                        if (parts.length < 2) {
                            System.out.println("Formato de línea incorrecto.");
                            file.close();
                            return;
                        }
                        String rightPart = parts[1];
                        String newRightPart = "*" + byteEncontrado + "*";
                        newLine = newRightPart + "|";
                        file.seek(lastAvailPos);
                        file.writeBytes(newLine);
                    }

                    System.out.println("Línea modificada y escrita en el archivo: " + newLine);

                    for (Integer integer : AvailList) {
                        System.out.println("Número avail " + integer);
                    }

                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Algo salió mal");
                }
                modificarLinea(archivoActual, -1, byteEncontrado);
                JOptionPane.showMessageDialog(this, "Registro modificado correctamente");

            } else { // vacío
                try {
                    byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                    String content = new String(fileContent);

                    int firstLineEnd = content.indexOf('\n');
                    if (firstLineEnd == -1) {
                        System.out.println("El archivo no contiene una línea completa.");
                        return;
                    }

                    String firstLine = content.substring(0, firstLineEnd + 1);
                    String[] parts = firstLine.split("\\|");
                    if (parts.length < 2) {
                        System.out.println("Formato de línea incorrecto.");
                        return;
                    }

                    String leftPart = parts[0];
                    String replacedRight = "" + byteEncontrado;
                    while (replacedRight.length() < 7) {
                        replacedRight += "#";
                    }

                    String newFirstLine = leftPart + "|" + replacedRight + "|\n";
                    String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                    Files.write(Paths.get(archivoActual), newContent.getBytes());

                    System.out.println("Primera línea modificada y escrita en el archivo: " + newFirstLine);
                    cargarAvailList();
                    for (Integer integer : AvailList) {
                        System.out.println("Número avail " + integer);
                    }

                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Algo salió mal");
                }
                modificarLinea(archivoActual, -1, byteEncontrado);
                JOptionPane.showMessageDialog(this, "Registro modificado correctamente");
            }

            if (cantidad == 1) {
                try {
                    byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                    String content = new String(fileContent);

                    int firstLineEnd = content.indexOf('\n');
                    if (firstLineEnd == -1) {
                        System.out.println("El archivo no contiene una línea completa.");
                        return;
                    }

                    String firstLine = content.substring(0, firstLineEnd + 1);
                    String[] parts = firstLine.split("\\|");
                    if (parts.length < 2) {
                        System.out.println("Formato de línea incorrecto.");
                        return;
                    }

                    String leftPart = parts[0];
                    String rightPart = parts[1];
                    leftPart = leftPart.replace("#", "");
                    int num = Integer.parseInt(leftPart);
                    num--;

                    String numero = "";
                    while (numero.length() < 6) {
                        numero += "#";
                    }

                    String newFirstLine = numero + "|" + rightPart + "|\n";
                    String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                    Files.write(Paths.get(archivoActual), newContent.getBytes());
                    cantidad = num;
                    cargarAvailList();

                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Algo salió mal");
                }
            } else {
                try {
                    byte[] fileContent = Files.readAllBytes(Paths.get(archivoActual));
                    String content = new String(fileContent);

                    int firstLineEnd = content.indexOf('\n');
                    if (firstLineEnd == -1) {
                        System.out.println("El archivo no contiene una línea completa.");
                        return;
                    }

                    String firstLine = content.substring(0, firstLineEnd + 1);
                    String[] parts = firstLine.split("\\|");
                    if (parts.length < 2) {
                        System.out.println("Formato de línea incorrecto.");
                        return;
                    }

                    String leftPart = parts[0];
                    String rightPart = parts[1];
                    leftPart = leftPart.replace("#", "");
                    int num = Integer.parseInt(leftPart);
                    num--;

                    String numero = "" + num;

                    while (numero.length() < 6) {
                        numero += "#";
                    }

                    String newFirstLine = numero + "|" + rightPart + "|\n";
                    String newContent = newFirstLine + content.substring(firstLineEnd + 1);

                    Files.write(Paths.get(archivoActual), newContent.getBytes());
                    cantidad = num;
                    cargarAvailList();

                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Algo salió mal");
                }
            }

            DefaultTableModel m = (DefaultTableModel) jTable8.getModel();
            m.setRowCount(0);
            jTable8.setModel(m);
            AmTree.getArbolCargado().delete(AmTree.getArbolCargado().getRaiz(), jTextField3.getText());
            AmTree.escribirArchivo();
        }
        AmTree.getArbolCargado().printTree();
        jTextField3.setText("");
    }//GEN-LAST:event_bttnEliminarRegistroMouseClicked

    private void btnListarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarRegistrosMouseClicked
        MenuRegistro.setVisible(false);
        MenuRegistro.setModal(false);

        //lenar al menos 10 registros
        try {
            String[] nombresColumnas = campos.stream()
                    .map(Campo::getNombre)
                    .toArray(String[]::new);
            DefaultTableModel m = new DefaultTableModel(nombresColumnas, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            if (cantidad > 0) {
                try ( RandomAccessFile br = new RandomAccessFile(archivoActual, "r")) {
                    br.seek(367);
                    int registroNum = 1;
                    int cantidadMaxima = Math.min(cantidad, 15);  // sacar el minimo siendo el maximo 10

                    while (registroNum <= cantidadMaxima && br.getFilePointer() < br.length()) { //mientras la cantidad de numeros impresos sea menor a la cantidad max
                        byte[] buffer = new byte[350];  // tamaño del registro

                        // Leer 350 bytes del archivo
                        br.readFully(buffer);

                        // Convertir los bytes a String
                        String registro = new String(buffer);

                        // Buscar el final del registro (carácter '/')
                        int indiceFin = registro.indexOf('/');
                        if (indiceFin != -1) {
                            registro = registro.substring(0, indiceFin).trim();
                        }

                        // Eliminar los guiones al final del registro si es necesario
                        registro = registro.replaceAll("-", "").trim();

                        // Añadir el registro a la tabla
                        Object[] row = new Object[campos.size()];
                        String[] datos = registro.split("\\|");

                        // Asegúrate de que el número de columnas y datos coincidan
                        for (int i = 0; i < campos.size() && i < datos.length; i++) {
                            row[i] = datos[i].trim();
                        }

                        m.addRow(row);  // Agregar fila a la tabla
                        registroNum++;
                    }
                } catch (IOException e) {
                    System.err.println("Error al leer el archivo: " + e.getMessage());
                }
            }

            jTable5.setModel(m);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        jTable5.setDefaultRenderer(Object.class, new Render_Llave());
        abrirDialog(ListarRegistro);
    }//GEN-LAST:event_btnListarRegistrosMouseClicked

    private void btnModificarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarRegistrosMouseClicked
        MenuRegistro.setVisible(false);
        MenuRegistro.setModal(false);

        /*Editado*/
    }//GEN-LAST:event_btnModificarRegistrosMouseClicked

    private void btnBuscarRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRegistrosMouseClicked
        MenuRegistro.setVisible(false);
        MenuRegistro.setModal(false);

        jTable7.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"Nombre de Campo", "Tipo de Dato", "Contenido"}));
        DefaultTableModel modelo = (DefaultTableModel) jTable7.getModel();
        for (Campo c : campos) {
            Object[] row = {c.getNombre(), c.getTipo()};
            modelo.addRow(row);
        }

        jTable7.setModel(modelo);
        abrirDialog(BuscarRegistro);
    }//GEN-LAST:event_btnBuscarRegistrosMouseClicked

    private void btnEliminarRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarRegistroMouseClicked
        MenuRegistro.setVisible(false);
        MenuRegistro.setModal(false);

        abrirDialog(EliminarRegistro);
    }//GEN-LAST:event_btnEliminarRegistroMouseClicked

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setBackground(new Color(51, 51, 255));


    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setBackground(new Color(0, 0, 204));


    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setBackground(new Color(51, 51, 255));

    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
        jButton2.setBackground(new Color(0, 0, 204));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        // TODO add your handling code here:
        jButton3.setBackground(new Color(51, 51, 255));

    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        // TODO add your handling code here:
        jButton3.setBackground(new Color(0, 0, 204));

    }//GEN-LAST:event_jButton3MouseExited

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        jButton4.setBackground(new Color(51, 51, 255));
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
        jButton4.setBackground(new Color(0, 0, 204));
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        jButton5.setBackground(new Color(51, 51, 255));
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
        jButton5.setBackground(new Color(0, 0, 204));
    }//GEN-LAST:event_jButton5MouseExited

    private void btnSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseEntered
        // TODO add your handling code here:

        btnSalir.setBackground(new Color(255, 102, 102));
    }//GEN-LAST:event_btnSalirMouseEntered

    private void btnSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseExited
        // TODO add your handling code here:
        btnSalir.setBackground(new Color(204, 0, 0));
    }//GEN-LAST:event_btnSalirMouseExited
    public int cargarAvailList() throws IOException {

        String rrn = "";
        String linea = "";

        try ( RandomAccessFile file = new RandomAccessFile(archivoActual, "rw")) {
            // Leer la metadata de la primera línea
            String metadata = file.readLine();
            if (metadata == null) {
                System.out.println("El archivo está vacío o no contiene una línea completa.");
                return 0;
            }

            String[] metaParts = metadata.split("\\|");
            if (metaParts.length < 2) {
                System.out.println("Formato de línea incorrecto.");
                return 0;
            }

            String cant = metaParts[0].replace("#", ""); // Cantidad de registros
            String cabeza = metaParts[1].replace("#", ""); // Cabeza del AvailList

            if (!cant.isEmpty() && !cabeza.isEmpty()) {
                cantidad = Integer.parseInt(cant);
                cabezaAvail = Integer.parseInt(cabeza);

                // Vaciar el AvailList
                AvailList.clear();
                AvailList.clear();

                int pos = cabezaAvail;
                if (pos != -1) {
                    AvailList.add(pos);
                }
                System.out.println(pos);

                while (pos != -1) {
                    file.seek(pos);

                    // Leer la línea en la posición actual
                    linea = file.readLine();
                    if (linea == null) {
                        System.out.println("No se pudo leer la línea en la posición: " + pos);
                        break;
                    }

                    // Limpiar el valor de rrn antes de empezar a leer cada línea
                    rrn = "";
                    boolean dentroAsteriscos = false;

                    // Recorrer los caracteres de la línea
                    for (char c : linea.toCharArray()) {
                        if (c == '*') {
                            if (dentroAsteriscos) {
                                // Se sale cuando se encuentra el segundo asterisco
                                break;
                            } else {
                                dentroAsteriscos = true;
                            }
                        } else if (dentroAsteriscos) {
                            rrn += c;
                        }
                    }

                    // Convertir el valor de rrn a entero (si contiene un valor numérico)
                    try {
                        pos = Integer.parseInt(rrn); // Convertir a posición
                    } catch (NumberFormatException e) {
                        pos = -1; // Si no es un número válido, terminamos
                    }

                    // Solo agregar la posición si es válida
                    if (pos != -1) {
                        AvailList.add(pos); // Agregar la nueva posición al AvailList
                    }
                }
            }
        } catch (IOException e) {
            System.out.println("Error al leer el archivo: " + e.getMessage());
            throw e;
        }

        for (Integer integer : AvailList) {
            System.out.println("Número avail: " + integer);
        }

        return cantidad;
    }

    public void cargarArbol() { //cargar
        bytePosition = 0;
        int cont = 0;
        Key k;

        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "r")) {
            // Saltar los primeros 367 bytes
            raf.seek(367);
            bytePosition += 367;

            // Leer registros de 350 bytes
            byte[] buffer = new byte[350];
            int bytesRead = raf.read(buffer);

            while (bytesRead != -1) {
                cont++;
                // Convertir el buffer a una cadena
                String linea = new String(buffer);

                // Guardar la posición inicial del registro
                long inicioLinea = bytePosition;
                System.out.println("inicio linea: " + inicioLinea);

                String[] partes = linea.split("\\|");
                int posLlave = 0;
                for (int i = 0; i < campos.size(); i++) {
                    if (campos.get(i).isLlave()) {
                        posLlave = i;
                    }
                }
                if (partes != null && partes.length > posLlave) {
                    String s = partes[posLlave];

                    k = new Key(s, bytePosition);

                    AmTree.getArbolCargado().insert(AmTree.getArbolCargado().getRaiz(), k);

                    AmTree.escribirArchivo();

                    AmTree.getArbolCargado().printTree();
                }
                bytePosition += 350;
                bytesRead = raf.read(buffer);
                System.out.println("contador: " + bytePosition);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    private void jButton28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton28MouseClicked
        // TODO add your handling code here:
        if (!jTextField3.getText().isEmpty()) {
            Key k = new Key(jTextField3.getText(), 0);
            byteEncontrado = AmTree.getArbolCargado().SearchByt(AmTree.getArbolCargado().getRaiz(), k);//busca el byte, posicion fisica en el archivo
            System.out.println(byteEncontrado);
            if (byteEncontrado != -1) {
                llenarTablaConDatos(byteEncontrado, jTable8);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro el registro.");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Campo vacio, ingrese una llave.");
        }
    }//GEN-LAST:event_jButton28MouseClicked

    public void llenarTablaConDatos(int byteEncontrado, JTable tabla) { // llenar la tabla con la info de registro
        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "rw")) {
            if (byteEncontrado != -1) { // encontró el registro
                System.out.println(archivoActual);
                System.out.println(byteEncontrado);
                raf.seek(byteEncontrado);

                long currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                // Leer exactamente 350 bytes para obtener el registro completo
                byte[] buffer = new byte[350];
                raf.readFully(buffer);
                String lineaRegistro = new String(buffer).trim(); // Convertir a String y eliminar espacios en blanco

                currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                System.out.println(lineaRegistro);
                String[] partes = lineaRegistro.split("\\|");

                tabla.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"Campo", "Datos del Registro"}));
                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();

                for (int i = 0; i < campos.size(); i++) {
                    if (i < partes.length) {
                        String campo = campos.get(i).getNombre();
                        String datoDelRegistro = partes[i];

                        if (datoDelRegistro.contains("/")) {
                            String[] partesDeSlash = datoDelRegistro.split("/");
                            datoDelRegistro = partesDeSlash[0];
                        }

                        Object[] row = {campo, datoDelRegistro};
                        modelo.addRow(row);
                    } else {
                        Object[] row = {campos.get(i).getNombre(), "No disponible"};
                        modelo.addRow(row);
                    }
                }

                tabla.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void llenarTablaConDatos1(int byt) { // llenar la tabla con la info de registro
        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "rw")) {
            if (byt != -1) { // encontró el registro
                System.out.println(archivoActual);
                System.out.println(byt);
                raf.seek(byteEncontrado);

                long currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                String lineaRegistro = raf.readLine();
                currentPosition = raf.getFilePointer();
                System.out.println("Posición actual del puntero: " + currentPosition);

                System.out.println(lineaRegistro);
                String[] partes = lineaRegistro.split("\\|");
                jTable6.setModel(new CustomTableModel(new Object[][]{}, new String[]{"Nombre de Campo", "Tipo de Dato", "Contenido"}));
                DefaultTableModel modelo = (DefaultTableModel) jTable6.getModel();

                for (int i = 0; i < campos.size(); i++) {
                    if (i < partes.length) {
                        String campo = campos.get(i).getNombre();
                        String tipo = campos.get(i).getTipo();
                        String datoDelRegistro = partes[i];

                        if (datoDelRegistro.contains("/")) {
                            String[] partesDeSlash = datoDelRegistro.split("/");
                            datoDelRegistro = partesDeSlash[0];
                        }

                        Object[] row = {campo, tipo, datoDelRegistro};
                        modelo.addRow(row);
                    } else {
                        Object[] row = {campos.get(i).getNombre(), "No disponible"};
                        modelo.addRow(row);
                    }
                }

                jTable6.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario.", "Usuario no encontrado.", JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        if (archivoActual.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay un archivo abierto.");
            return;
        }
        if (campos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay campos para hacer indexacion.");
            return;
        }
        this.setVisible(false);
        abrirDialog(MenuIndice);
    }//GEN-LAST:event_jButton4MouseClicked

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        // TODO add your handling code here:
        jTextField3.setText("");
    }//GEN-LAST:event_jTextField3MouseClicked

    private void jButton22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton22MouseClicked
        // TODO add your handling code here:
        if (!jTextField1.getText().isEmpty()) {
            Key k = new Key(jTextField1.getText(), 0);
            byteEncontrado = AmTree.getArbolCargado().SearchByt(AmTree.getArbolCargado().getRaiz(), k); //busca el byte, posicion fisica en el archivo
            System.out.println(byteEncontrado);
            if (byteEncontrado != -1) {
                llenarTablaConDatos1(byteEncontrado + 1);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el registro", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            jTextField1.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Campo vacio, ingrese una llave", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton22MouseClicked

    private void btnCrearIndicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearIndicesMouseClicked
        if (btnCrearIndices.isEnabled()) {
            MenuIndice.setVisible(false);
            MenuIndice.setModal(false);

            LlaveSecundaria.setModel(new DefaultComboBoxModel());
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();

            for (Campo campo : campos) {
                if (campo.getTipo().equalsIgnoreCase("int") || campo.getTipo().equalsIgnoreCase("double") || campo.getTipo().equalsIgnoreCase("String") || campo.getTipo().equalsIgnoreCase("char")) {
                    if (!campo.isLlave()) {
                        Modelo.addElement(campo.getNombre());
                    }
                }
            }
            LlaveSecundaria.setModel(Modelo);
            abrirDialog(CrearIndice);
        } else {
            JOptionPane.showMessageDialog(null, "No se puede crear más de un archivo de indices");
        }

    }//GEN-LAST:event_btnCrearIndicesMouseClicked

    private void btnReIndexarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReIndexarMouseClicked
        String nombre = obtenerNombreArchivoSinExtension(archivoActual);
        AdminBTree ab = new AdminBTree(nombre + "Secundario");
        //ab.escribirArchivo();
        ab.cargarArchivo();
        bytePosition = 0;
        int cont = 0;
        Key k;
        String Campo = LlaveSecundaria.getSelectedItem().toString();

        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "r")) {
            // Saltar los primeros 367 bytes
            raf.seek(367);
            bytePosition += 367;

            // Leer registros de 350 bytes
            byte[] buffer = new byte[350];
            int bytesRead = raf.read(buffer);

            while (bytesRead != -1) {
                cont++;
                // Convertir el buffer a una cadena
                String linea = new String(buffer);

                // Guardar la posición inicial del registro
                long inicioLinea = bytePosition;
                System.out.println("inicio linea: " + inicioLinea);

                String[] contrapleca = linea.split("\\/");
                String[] partes = contrapleca[0].split("\\|");
                int posLlave = 0;
                for (int i = 0; i < campos.size(); i++) {
                    if (campos.get(i).getNombre().equals(Campo)) {
                        posLlave = i;
                    }
                }

                if (partes != null && partes.length > posLlave) {
                    String s = partes[posLlave];

                    k = new Key(s, bytePosition);

                    /*Validar si es una llave repetia*/
                    if (ab.getArbolCargado().Search(ab.getArbolCargado().getRaiz(), k) != null) {
                        JOptionPane.showMessageDialog(null, "Hay llaves secundarias duplicadas, operacion de indexacion cancelada", "Llave duplicada.", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    ab.getArbolCargado().insert(ab.getArbolCargado().getRaiz(), k);
                    ab.escribirArchivo();
                    System.out.println("Arbol actualizado: ");
                    ab.getArbolCargado().printTree();
                }
                bytePosition += 350;
                bytesRead = raf.read(buffer);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
        CrearIndice.setVisible(false);
        CrearIndice.setModal(false);
        abrirDialog(MenuIndice);
        JOptionPane.showMessageDialog(null, "Indexacion por llave secundaria completa!");
        btnCrearIndices.setEnabled(false);
    }//GEN-LAST:event_btnReIndexarMouseClicked

    private void btnBuscarReIndexadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarReIndexadosMouseClicked
        MenuIndice.setVisible(false);
        MenuIndice.setModal(false);
        abrirDialog(BuscarReIndexados);
    }//GEN-LAST:event_btnBuscarReIndexadosMouseClicked

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        this.setVisible(true);
        MenuIndice.setVisible(false);
        MenuIndice.setModal(false);
    }//GEN-LAST:event_jButton15MouseClicked

    private void jButton27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton27MouseClicked
        BuscarReIndexados.setVisible(false);
        BuscarReIndexados.setModal(false);
        abrirDialog(MenuIndice);
    }//GEN-LAST:event_jButton27MouseClicked

    private void bttnCrearIndicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnCrearIndicesMouseClicked
        String nombre = obtenerNombreArchivoSinExtension(archivoActual);
        String Campo = LlaveSecundaria.getSelectedItem().toString();
        AdminBTree ab = new AdminBTree(nombre + Campo + "Secundario");
        bytePosition = 0;
        int cont = 0;
        Key k;

        try ( RandomAccessFile raf = new RandomAccessFile(archivoActual, "r")) {
            // Saltar los primeros 367 bytes
            raf.seek(367);
            bytePosition += 367;

            // Leer registros de 350 bytes
            byte[] buffer = new byte[350];
            int bytesRead = raf.read(buffer);

            while (bytesRead != -1) {
                cont++;
                // Convertir el buffer a una cadena
                String linea = new String(buffer);

                // Guardar la posición inicial del registro
                long inicioLinea = bytePosition;
                System.out.println("inicio linea: " + inicioLinea);
                String[] contrapleca = linea.split("\\/");
                String[] partes = contrapleca[0].split("\\|");
                int posLlave = 0;
                for (int i = 0; i < campos.size(); i++) {
                    if (campos.get(i).getNombre().equals(Campo)) {
                        posLlave = i;
                    }
                }

                if (partes != null && partes.length > posLlave) {
                    String s = partes[posLlave];

                    k = new Key(s, bytePosition);

                    /*Validar si es una llave repetia*/
                    if (ab.getArbolCargado().Search(ab.getArbolCargado().getRaiz(), k) != null) {
                        JOptionPane.showMessageDialog(null, "Hay llaves secundarias duplicadas, operacion de indexacion cancelada", "Llave duplicada.", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    ab.getArbolCargado().insert(ab.getArbolCargado().getRaiz(), k);
                    ab.escribirArchivo();
                    System.out.println("Arbol actualizado: ");
                    ab.getArbolCargado().printTree();
                }
                bytePosition += 350;
                bytesRead = raf.read(buffer);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Indexacion por llave secundaria completa!");
        btnCrearIndices.setEnabled(false);
        CrearIndice.setVisible(false);
        CrearIndice.setModal(false);
        abrirDialog(MenuIndice);
    }//GEN-LAST:event_bttnCrearIndicesMouseClicked

    private void jButton18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseClicked
        CrearIndice.setVisible(false);
        CrearIndice.setModal(false);
        abrirDialog(MenuIndice);
    }//GEN-LAST:event_jButton18MouseClicked

    private void jButton29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton29MouseClicked
        if (!jTextField4.getText().isEmpty()) {
            Key k = new Key(jTextField4.getText(), 0);
            String name = obtenerNombreArchivoSinExtension(archivoActual);
            AdminBTree ab = new AdminBTree(name + "Secundario");
            ab.cargarArchivo();
            byteEncontrado = ab.getArbolCargado().SearchByt(ab.getArbolCargado().getRaiz(), k);//busca el byte, posicion fisica en el archivo
            System.out.println(byteEncontrado);
            if (byteEncontrado != -1) {
                llenarTablaConDatos(byteEncontrado, jTable9);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el Registro");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Campo vacio, ingrese una llave");
        }
    }//GEN-LAST:event_jButton29MouseClicked

    private void jButton26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton26MouseClicked
        if (!jTextField2.getText().isEmpty()) {
            Key k = new Key(jTextField2.getText(), 0);
            byteEncontrado = AmTree.getArbolCargado().SearchByt(AmTree.getArbolCargado().getRaiz(), k);//busca el byte, posicion fisica en el archivo
            if (byteEncontrado != -1) {
                llenarTablaConDatos(byteEncontrado, jTable7);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el Registro");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Campo vacio, ingrese una llave");
        }
    }//GEN-LAST:event_jButton26MouseClicked

    private void btnExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcelMouseClicked

    private void btnReIndexar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReIndexar1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnReIndexar1MouseClicked

    private void jButton19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseClicked
        MenuEstandarizacion.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton19MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        if (archivoActual.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay un archivo abierto.");
            return;
        }
        if (campos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay campos para hacer indexacion.");
            return;
        }
        cargarArbol();
        this.setVisible(false);
        abrirDialog(MenuEstandarizacion);
    }//GEN-LAST:event_jButton5MouseClicked

    private void btnCruzarArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCruzarArchivoMouseClicked
        MenuRegistro.setVisible(false);
        abrirDialog(CruzarArchivos);
    }//GEN-LAST:event_btnCruzarArchivoMouseClicked

    private void jButton30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton30MouseClicked
        CruzarArchivos.setVisible(false);
        abrirDialog(MenuRegistro);
    }//GEN-LAST:event_jButton30MouseClicked

// Valida que el tipo de dato coincida con el tipo de contenido en la tabla
    public boolean validarContenido(TableModel model) {
        for (int i = 0; i < model.getRowCount(); i++) {
            if ((model.getValueAt(i, 2)) == null || ((String) model.getValueAt(i, 2)).equals("")) { //por si está vacio
                return false;
            }
            if (((String) model.getValueAt(i, 1)).equals("int") && !esInt((String) model.getValueAt(i, 2))) {
                return false;
            }
            //Pendiente validar
            if (((String) model.getValueAt(i, 1)).equals("double") && !esDouble((String) model.getValueAt(i, 2))) {
                return false;
            }

        }
        return true;
    }

    public boolean esInt(String contenido) {
        for (int i = 0; i < contenido.length(); i++) {
            if (contenido.charAt(i) < 48 || contenido.charAt(i) > 57) {
                return false;
            }
        }
        return true;
    }

    //Pediente modificar
    public boolean esFloat(String contenido) {
        String y = contenido;
        if (!(y.matches("\\d{1,3}") || y.matches("\\d{1,3}\\/\\d"))) {
            return false;
        }
        return true;
    }

    //Pendiente modificar
    public boolean esDouble(String contenido) {

        int pointcounter = 0;
        for (int i = 0; i < contenido.length(); i++) {
            if ((contenido.charAt(i) < 48 || contenido.charAt(i) > 57) && contenido.charAt(i) != 46) {
                return false;
            }
            if (contenido.charAt(i) == 46) {
                pointcounter++;
            }
        }

        if (pointcounter > 1) {
            return false;
        }
        return true;
    }

    public void abrirDialog(JDialog pestaña) {
        pestaña.pack();
        pestaña.setModal(true);
        pestaña.setLocationRelativeTo(this);
        pestaña.setVisible(true);

    }

    class CustomTableModel extends DefaultTableModel {

        public CustomTableModel(Object[][] data, Object[] columnNames) {
            super(data, columnNames);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            // Hacer que las columnas "Nombre de Campo" (0) y "Tipo de Dato" (1) no sean editables
            return column != 0 && column != 1;
        }
    }

    public class Render_Llave extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            int posLlave = 0;
            for (int i = 0; i < campos.size(); i++) {
                if (campos.get(i).isLlave()) {
                    posLlave = i;
                }
            }

            if (column == posLlave) {
                setBackground(new Color(0, 204, 102));

            } else {
                setBackground(table.getBackground());
            }

            return this;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    AdminBTree AmTree;
    int indexCampo = 0;
    int byteEncontrado = 0;
    int cantidad = 0;
    int cabezaAvail = 0;
    boolean Archivoexistente = false;////comprueba si ya hay registros 
    ArrayList<Integer> AvailList = new ArrayList();
    int bytePosition = -1;
    String metadata = "";
    boolean wasKey = false;
    boolean keyExists = false;
    String nombreMod = "";
    ArrayList<String> registros = new ArrayList();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArchivoEnUso;
    private javax.swing.JLabel ArchivoEnUso1;
    private javax.swing.JLabel ArchivoEnUso2;
    private javax.swing.JLabel ArchivoEnUso3;
    private javax.swing.JLabel ArchivoEnUso4;
    private javax.swing.JLabel ArchivoEnUso5;
    private javax.swing.JDialog BorrarCampo;
    private javax.swing.JDialog BuscarReIndexados;
    private javax.swing.JDialog BuscarRegistro;
    private javax.swing.JDialog CrearCampos;
    private javax.swing.JDialog CrearIndice;
    private javax.swing.JDialog CrearRegistro;
    private javax.swing.JDialog CruzarArchivos;
    private javax.swing.JDialog EliminarRegistro;
    private javax.swing.JDialog ListarCampos;
    private javax.swing.JDialog ListarRegistro;
    private javax.swing.JComboBox<String> LlaveSecundaria;
    private javax.swing.JDialog MenuArchivo;
    private javax.swing.JDialog MenuCampo;
    private javax.swing.JDialog MenuEstandarizacion;
    private javax.swing.JDialog MenuIndice;
    private javax.swing.JDialog MenuRegistro;
    private javax.swing.JDialog ModificarCampos;
    private javax.swing.JDialog ModificarRegistro;
    private javax.swing.JDialog NuevoArchivo;
    private javax.swing.JLabel archivoAbierto;
    private javax.swing.JButton btnAbrirArchivo;
    private javax.swing.JButton btnBorrarCampo;
    private javax.swing.JButton btnBuscarReIndexados;
    private javax.swing.JButton btnBuscarRegistros;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnCrearArchivo;
    private javax.swing.JButton btnCrearCampo;
    private javax.swing.JButton btnCrearCampos;
    private javax.swing.JButton btnCrearIndices;
    private javax.swing.JButton btnCrearRegistro;
    private javax.swing.JButton btnCruzarArchivo;
    private javax.swing.JButton btnCruzarArchivos;
    private javax.swing.JButton btnEliminarCampo;
    private javax.swing.JButton btnEliminarRegistro;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnListarCampo;
    private javax.swing.JButton btnListarRegistros;
    private javax.swing.JButton btnModificarCampo;
    private javax.swing.JButton btnModificarRegistros;
    private javax.swing.JButton btnNuevoArchivo;
    private javax.swing.JButton btnReIndexar;
    private javax.swing.JButton btnReIndexar1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSeleccionarArchivo;
    private javax.swing.JButton bttnCrearIndices;
    private javax.swing.JButton bttnCrearRegistro;
    private javax.swing.JButton bttnEliminarRegistro;
    private javax.swing.JButton bttnModificarCampos;
    private javax.swing.JButton bttnModificarRegistro;
    private javax.swing.JComboBox<String> camposArchivo2;
    private javax.swing.JComboBox<String> camposArchivoActual;
    private javax.swing.JRadioButton isKey;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JSpinner longitud;
    private javax.swing.JTextField nameArchivo;
    private javax.swing.JTextField nameAtributo;
    private javax.swing.JComboBox<String> tipoDato;
    // End of variables declaration//GEN-END:variables
}
